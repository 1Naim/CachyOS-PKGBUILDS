From 3afcd221f6b640903f57860eedf0582fa1fceae6 Mon Sep 17 00:00:00 2001
From: Chris Billheimer <cbillhei@billhei.org>
Date: Mon, 1 May 2023 11:38:24 -0400
Subject: [PATCH 1/3] Add support for Fira Code progress bar

---
 src/pacman/callback.c    | 65 ++++++++++++++++++++++++++++------------
 src/pacman/conf.c        |  3 ++
 src/pacman/conf.h        |  2 ++
 src/pacman/pacman-conf.c |  3 ++
 4 files changed, 54 insertions(+), 19 deletions(-)

diff --git a/src/pacman/callback.c b/src/pacman/callback.c
index 5c3557c7e..d89038a23 100644
--- a/src/pacman/callback.c
+++ b/src/pacman/callback.c
@@ -158,35 +158,62 @@ static void fill_progress(const int percent, const int proglen)
 	int i;
 
 	if(hashlen > 0) {
-		fputs(" [", stdout);
-		for(i = hashlen; i > 0; --i) {
-			/* if special progress bar enabled */
-			if(config->chomp) {
-				if(i > hashlen - hash) {
-					putchar('-');
-				} else if(i == hashlen - hash) {
-					if(percent % 2 == 0) {
-						fputs("\033[1;33mC\033[m", stdout);
+		/* if special fira progress bar enabled, and special chomp progress bar is not enabled */
+		if(config->fira && !config->chomp) {
+			/* empty progress bar beginning */
+			fputs(" \uEE00", stdout);
+			for(i = hashlen; i > 0; --i) {
+				if(i == hashlen) {
+					/* filled progress bar beginning */
+					/* backspace is used to overwrite empty progress bar beginning */
+					fputs("\b\uEE03", stdout);
+				} else if(i > hashlen - hash) {
+					/* filled progress bar middle */
+					fputs("\uEE04", stdout);
+				} else {
+					/* empty progress bar middle */
+					fputs("\uEE01", stdout);
+				}
+			}
+			/* empty progress bar end */
+			fputs("\uEE02", stdout);
+		} else {
+			fputs(" [", stdout);
+			for(i = hashlen; i > 0; --i) {
+				/* if special progress bar enabled */
+				if(config->chomp) {
+					if(i > hashlen - hash) {
+						putchar('-');
+					} else if(i == hashlen - hash) {
+						if(percent % 2 == 0) {
+							fputs("\033[1;33mC\033[m", stdout);
+						} else {
+							fputs("\033[1;33mc\033[m", stdout);
+						}
+					} else if(i % 3 == 0) {
+						fputs("\033[0;37mo\033[m", stdout);
 					} else {
-						fputs("\033[1;33mc\033[m", stdout);
+						fputs("\033[0;37m \033[m", stdout);
 					}
-				} else if(i % 3 == 0) {
-					fputs("\033[0;37mo\033[m", stdout);
+				} /* else regular progress bar */
+				else if(i > hashlen - hash) {
+					putchar('#');
 				} else {
-					fputs("\033[0;37m \033[m", stdout);
+					putchar('-');
 				}
-			} /* else regular progress bar */
-			else if(i > hashlen - hash) {
-				putchar('#');
-			} else {
-				putchar('-');
 			}
+			putchar(']');
 		}
-		putchar(']');
 	}
 	/* print display percent after progress bar */
 	/* 5 = 1 space + 3 digits + 1 % */
 	if(proglen >= 5) {
+		/* end of the progress bar still needs to be filled in at the end */
+		if(config->fira && !config->chomp && percent == 100) {
+			/* filled progress bar end */
+			/* backspace is used to overwrite empty progress bar end */
+			fputs("\b\uEE05", stdout);
+		}
 		printf(" %3d%%", percent);
 	}
 
diff --git a/src/pacman/conf.c b/src/pacman/conf.c
index f9edf75bc..fd8c6bd63 100644
--- a/src/pacman/conf.c
+++ b/src/pacman/conf.c
@@ -604,6 +604,9 @@ static int _parse_options(const char *key, char *value,
 		} else if(strcmp(key, "ILoveCandy") == 0) {
 			config->chomp = 1;
 			pm_printf(ALPM_LOG_DEBUG, "config: chomp\n");
+		} else if(strcmp(key, "PrettyProgressBar") == 0) {
+			config->fira = 1;
+			pm_printf(ALPM_LOG_DEBUG, "config: fira\n");
 		} else if(strcmp(key, "VerbosePkgLists") == 0) {
 			config->verbosepkglists = 1;
 			pm_printf(ALPM_LOG_DEBUG, "config: verbosepkglists\n");
diff --git a/src/pacman/conf.h b/src/pacman/conf.h
index f7916ca93..f03fc82e5 100644
--- a/src/pacman/conf.h
+++ b/src/pacman/conf.h
@@ -111,6 +111,8 @@ typedef struct __config_t {
 	/* conf file options */
 	/* I Love Candy! */
 	unsigned short chomp;
+	/* Fira Code Progress bars */
+	unsigned short fira;
 	/* format target pkg lists as table */
 	unsigned short verbosepkglists;
 	/* number of parallel download streams */
diff --git a/src/pacman/pacman-conf.c b/src/pacman/pacman-conf.c
index a9d1f52b4..cd8620cee 100644
--- a/src/pacman/pacman-conf.c
+++ b/src/pacman/pacman-conf.c
@@ -267,6 +267,7 @@ static void dump_config(void)
 	show_bool("VerbosePkgLists", config->verbosepkglists);
 	show_bool("DisableDownloadTimeout", config->disable_dl_timeout);
 	show_bool("ILoveCandy", config->chomp);
+	show_bool("PrettyProgressBar", config->fira);
 	show_bool("NoProgressBar", config->noprogressbar);
 
 	show_int("ParallelDownloads", config->parallel_downloads);
@@ -379,6 +380,8 @@ static int list_directives(void)
 			show_bool("DisableDownloadTimeout", config->disable_dl_timeout);
 		} else if(strcasecmp(i->data, "ILoveCandy") == 0) {
 			show_bool("ILoveCandy", config->chomp);
+		} else if(strcasecmp(i->data, "PrettyProgressBar") == 0) {
+			show_bool("PrettyProgressBar", config->fira);
 		} else if(strcasecmp(i->data, "NoProgressBar") == 0) {
 			show_bool("NoProgressBar", config->noprogressbar);
 
-- 
GitLab


From d2edae9db2d215d273e8358c28d19d980dc8c261 Mon Sep 17 00:00:00 2001
From: Chris Billheimer <cbillhei@billhei.org>
Date: Mon, 1 May 2023 12:13:57 -0400
Subject: [PATCH 2/3] Fix Fira Code progress bar printing logic

---
 src/pacman/callback.c | 25 ++++++++++++-------------
 1 file changed, 12 insertions(+), 13 deletions(-)

diff --git a/src/pacman/callback.c b/src/pacman/callback.c
index d89038a23..737144f28 100644
--- a/src/pacman/callback.c
+++ b/src/pacman/callback.c
@@ -160,13 +160,13 @@ static void fill_progress(const int percent, const int proglen)
 	if(hashlen > 0) {
 		/* if special fira progress bar enabled, and special chomp progress bar is not enabled */
 		if(config->fira && !config->chomp) {
-			/* empty progress bar beginning */
-			fputs(" \uEE00", stdout);
 			for(i = hashlen; i > 0; --i) {
-				if(i == hashlen) {
+				if(i == hashlen && percent == 0) {
+					/* empty progress bar beginning */
+					fputs(" \uEE00", stdout);
+				} else if(i == hashlen && percent > 0) {
 					/* filled progress bar beginning */
-					/* backspace is used to overwrite empty progress bar beginning */
-					fputs("\b\uEE03", stdout);
+					fputs(" \uEE03", stdout);
 				} else if(i > hashlen - hash) {
 					/* filled progress bar middle */
 					fputs("\uEE04", stdout);
@@ -175,8 +175,13 @@ static void fill_progress(const int percent, const int proglen)
 					fputs("\uEE01", stdout);
 				}
 			}
-			/* empty progress bar end */
-			fputs("\uEE02", stdout);
+			if(percent == 100) {
+				/* filled progress bar end*/
+				fputs("\uEE05", stdout);
+			} else {
+				/* empty progress bar end */
+				fputs("\uEE02", stdout);
+			}
 		} else {
 			fputs(" [", stdout);
 			for(i = hashlen; i > 0; --i) {
@@ -208,12 +213,6 @@ static void fill_progress(const int percent, const int proglen)
 	/* print display percent after progress bar */
 	/* 5 = 1 space + 3 digits + 1 % */
 	if(proglen >= 5) {
-		/* end of the progress bar still needs to be filled in at the end */
-		if(config->fira && !config->chomp && percent == 100) {
-			/* filled progress bar end */
-			/* backspace is used to overwrite empty progress bar end */
-			fputs("\b\uEE05", stdout);
-		}
 		printf(" %3d%%", percent);
 	}
 
-- 
GitLab
