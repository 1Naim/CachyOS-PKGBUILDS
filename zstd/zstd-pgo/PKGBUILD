# Maintainer: Levente Polyak <anthraxx[at]archlinux[dot]org>
# Contributor: Bartłomiej Piotrowski <bpiotrowski@archlinux.org>
# Contributor: Andrzej Giniewicz <gginiu@gmail.com>
# Contributor: Johan Förberg <johan@forberg.se>
# PGO Version: Laio O. Seman <laio@ieee.org>

pkgname=zstd
pkgver=1.5.6
pkgrel=2
pkgdesc='Zstandard - Fast real-time compression algorithm'
url='https://github.com/facebook/zstd'
arch=(x86_64)
license=(BSD GPL2)
depends=(glibc gcc-libs zlib xz lz4)
makedepends=(cmake gtest ninja)
provides=(libzstd.so)
source=(https://github.com/facebook/zstd/releases/download/v${pkgver}/zstd-${pkgver}.tar.zst{,.sig})
sha256sums=('4aa8dd1c1115c0fd6b6b66c35c7f6ce7bd58cc1dfd3e4f175b45b39e84b14352'
            'SKIP')
b2sums=('88430a6a5db47462f93f2458cd3cc4823913de2d2d979cad56b06b48367a4ee51f59c795944c16d06abfdd19758b69f0b6e504ed833d02ff76e4cda519d220e4'
        'SKIP')
validpgpkeys=(4EF4AC63455FC9F4545D9B7DEF8FE99528B52FFD)
options=('debug')
prepare() {
  cd ${pkgname}-${pkgver}
  # avoid error on tests without static libs, we use LD_LIBRARY_PATH
  sed '/build static library to build tests/d' -i build/cmake/CMakeLists.txt
  sed 's/libzstd_static/libzstd_shared/g' -i build/cmake/tests/CMakeLists.txt

  # PGO Patch
  echo '
	# Apply PGO-specific flags
	if(PGO_GENERATE)
      set_target_properties(zstd PROPERTIES COMPILE_FLAGS "-fprofile-generate")
      message(STATUS "PGO GENERATE")
	    target_link_libraries(zstd gcov)
	endif()

	if(PGO_USE)
      set_target_properties(zstd PROPERTIES COMPILE_FLAGS "-fprofile-use -Werror=missing-profile -Wno-error=coverage-mismatch")
	endif()
  ' >> build/cmake/programs/CMakeLists.txt
}

build() {
  cd ${pkgname}-${pkgver}
  export CFLAGS+=' -ffat-lto-objects'
  export CXXFLAGS+=' -ffat-lto-objects'

  # First build pass: Generate profile
  cmake -S build/cmake -B build -G Ninja \
    -DCMAKE_BUILD_TYPE=None \
      -DCMAKE_INSTALL_PREFIX=/usr \
      -DZSTD_ZLIB_SUPPORT=ON \
      -DZSTD_LZMA_SUPPORT=ON \
      -DZSTD_LZ4_SUPPORT=ON \
      -DZSTD_BUILD_CONTRIB=ON \
      -DZSTD_BUILD_STATIC=OFF \
      -DZSTD_BUILD_TESTS=ON \
      -DZSTD_PROGRAMS_LINK_SHARED=ON \
      -DPGO_GENERATE=ON \
      -DPGO_USE=OFF
  cmake --build build

  build/programs/zstd -b19i1
  build/programs/zstd -b16i1
  build/programs/zstd -b9i2
  build/programs/zstd -b
  build/programs/zstd -b7i2
  build/programs/zstd -b5
  
  # clean files
  cmake --build build --target clean

  # Second build pass: Use profile
  cmake -S build/cmake -B build -G Ninja \
    -DCMAKE_BUILD_TYPE=None \
    -DCMAKE_INSTALL_PREFIX=/usr \
    -DZSTD_ZLIB_SUPPORT=ON \
    -DZSTD_LZMA_SUPPORT=ON \
    -DZSTD_LZ4_SUPPORT=ON \
    -DZSTD_BUILD_CONTRIB=ON \
    -DZSTD_BUILD_STATIC=OFF \
    -DZSTD_BUILD_TESTS=ON \
    -DZSTD_PROGRAMS_LINK_SHARED=ON \
    -DPGO_GENERATE=OFF \
    -DPGO_USE=ON

  cmake --build build
}


check() {
  cd ${pkgname}-${pkgver}
  LD_LIBRARY_PATH="$(pwd)/build/lib" \
    ctest -VV --test-dir build
}

package() {
  cd ${pkgname}-${pkgver}
  DESTDIR="${pkgdir}" cmake --install build
  install -Dm 644 LICENSE -t "${pkgdir}/usr/share/licenses/${pkgname}"
}

# vim: ts=2 sw=2 et:
