# Maintainer: Giancarlo Razzolini <grazzolini@archlinux.org>
# Maintainer: Dave Reisner <dreisner@archlinux.org>
# Maintainer: Thomas BÃ¤chler <thomas@archlinux.org>

pkgname=mkinitcpio
pkgver=32
pkgrel=7
pkgdesc="Modular initramfs image creation utility"
arch=('any')
url='https://github.com/archlinux/mkinitcpio'
license=('GPL')
depends=('awk' 'mkinitcpio-busybox>=1.19.4-2' 'kmod' 'util-linux>=2.23' 'libarchive' 'coreutils'
         'bash' 'binutils' 'diffutils' 'findutils' 'grep' 'filesystem>=2011.10-1' 'zstd' 'systemd')
makedepends=('asciidoc')
optdepends=('gzip: Use gzip compression for the initramfs image'
            'xz: Use lzma or xz compression for the initramfs image'
            'bzip2: Use bzip2 compression for the initramfs image'
            'lzop: Use lzo compression for the initramfs image'
            'lz4: Use lz4 compression for the initramfs image'
            'mkinitcpio-nfs-utils: Support for root filesystem on NFS')
provides=('initramfs')
backup=('etc/mkinitcpio.conf')
source=("https://sources.archlinux.org/other/$pkgname/$pkgname-$pkgver.tar.gz"{,.sig}
        '0001-mkinitcpio-cachyos.patch'
        'fix-strip.patch'
        'add-real-symlink-support.patch'
        'etc-os-release-for-systemd-mkinitcpio-hook.patch')
install=mkinitcpio.install
sha512sums=('c180bef8af774305e8c9779b3405daaa5be33588bf89c6625a28eac1cde424f447782737d85d810fed4971d38b31086a072293d42aad08398c090f9538b56a4e'
            'SKIP'
            'f27e08451cf0a8ec6d785cf6a88bc00ea822fbaa5d91f13ff07842ffb044ba065095b1005d61e0e6a11f09dfc7fde77c4aca03203d1d1167ed36508474fdd335'
            'd19718f92916e00cece4e213bd7bd1cbf55b0094a39c459aaa995442342b64eb3fe8ec0bf023074f7ea26474a6fe2dc0370e0663823ed08ec5d33f6f645b833c'
            'ed7dd3da4470774c4f34eb12722c11b0812df0300d9cfcd6c70031d4a78852ed94910c6aef89bc37e767a00e130d13b88a5627123caa743e30c9ea6d1bd91628'
            '970691cdaa3c3ad2ce22bd5c488513e78a90cf2739af06312bdcde24eb3fc878644fd9dc6dbef55f2e9855d9f10a11ba148121a1f7c4e2a9752511e06c1720c5')
b2sums=('0c29659278e662eb58bc776f99e9579b5f0cf3268175382ecf2d635d54a6a8261ae173e387503a0c20a7492656c703a6699b52e1a6693c85c3211225d3e7abf8'
        'SKIP'
        '295504aeee4bb1fb79d699c524f6996eb5ae4ac2ae85989d0b6c169092fdb641f4ad5a60820813eafede560faf8d0d02355cf66773f63057afa3ab724180fb7e'
        '2b404010d5edb4b7eac36e25f0bf1c7958b7bc7b9740a1fda859579de48dc47552d9eee1d40abb8d2ebf1dffc523a64797c834bba59a22bab9e537ad12e991c7'
        '78ffd027549a6d76c429a798f35419e380b2a2c593d3405b8c885776bd5509b02c50e21226fd6b503fbf57e53e2eef587225f65c94bf6d2dd053c560d5bc6903'
        '9841f02d27568cdea13d52074541707dc7741a72c6077760e36f3b50cd62758800a2d23fc7bd7be598a07d0a2d35437b9065db53d4ba94b16b3bb0ac3f58b18f')
validpgpkeys=('ECCAC84C1BA08A6CC8E63FBBF22FB1D78A77AEAB'    # Giancarlo Razzolini
              'C100346676634E80C940FB9E9C02FF419FECBE16')   # Morten Linderud

prepare() {
 cd $pkgname-$pkgver

 local src
  for src in "${source[@]}"; do
    src="${src%%::*}"
    src="${src##*/}"
    [[ $src = *.patch ]] || continue
    echo "Applying patch $src..."
    patch -Np1 < "../$src"
  done
}

check() {
  make -C "$pkgname-$pkgver" check
}

package() {
  make -C "$pkgname-$pkgver" DESTDIR="$pkgdir" install
}
