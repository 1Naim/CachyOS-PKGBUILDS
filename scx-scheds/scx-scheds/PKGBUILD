# Maintainer: Tejun Heo <tj@kernel.org>
# Maintainer: Peter Jung ptr1337 <admin@ptr1337.dev>
# Maintainer: Piotr GÃ³rski <lucjan.lucjanov@gmail.com>

pkgname=scx-scheds
_gitname=scx
pkgver=1.0.4
pkgrel=3
pkgdesc='sched_ext schedulers and tools'
url='https://github.com/sched-ext/scx'
arch=('x86_64' 'aarch64')
backup=('etc/default/scx')
license=('GPL-2.0-only')
depends=(
  bpf
  jq
  libbpf
  libelf
  zlib
)
makedepends=(
  clang
  git
  llvm
  llvm-libs
  meson
  python
  rust
)
options=(!lto)
source=("git+https://github.com/sched-ext/scx?signed#tag=v$pkgver")
sha256sums=('c262e6ae6f804c61c4669bf6b09e9fdc01882d0e36ff0e4d6b9598fd7ad20e94')
validpgpkeys=(
  697C63013E65270255EBC2608744DC1EB26B5A9A  # Tejun Heo <tj@kernel.org>
  F5504C7B7B8107B40EF9E97AA1148BB3207BCC33  # David Vernet
)

_backports=(
461cb9a3a0f9e2989e55bfd742e5a67d65862bcb # scx_lavd: fix calculation of greedy_ratio
ebe9375b6a6593e71c6a4c8eff13bef7b13092b4 # scx_lavd: pretty printing of status
351a1c6656ded0d76414d52a2f8288a327cf50c0 # scx_lavd: enable autopilot mode by default
36df970a8f45de2fe97623e25f5ac9be9de70ac8 # scx_lavd: add debug print for turbo cores
4b4f42fce1f072deed96c7b4dcda08db00c36fbe # scx_lavd: add a short circuit for the case of no turbo core
95e2f4dabe09e37d77b5fb5ea53e592cd48a2430 # scx_lavd: boost the latency critility of kernel threads
)

_reverts=(
)

prepare() {
 cd $_gitname

 local _c _l
  for _c in "${_backports[@]}"; do
    if [[ "${_c}" == *..* ]]; then _l='--reverse'; else _l='--max-count=1'; fi
    git log --oneline "${_l}" "${_c}"
    git cherry-pick --mainline 1 --no-commit "${_c}"
  done
  for _c in "${_reverts[@]}"; do
    if [[ "${_c}" == *..* ]]; then _l='--reverse'; else _l='--max-count=1'; fi
    git log --oneline "${_l}" "${_c}"
    git revert --mainline 1 --no-commit "${_c}"
  done

  local src
  for src in "${source[@]}"; do
    src="${src%%::*}"
    src="${src##*/}"
    [[ $src = *.patch ]] || continue
    echo "Applying patch $src..."
    patch -Np1 < "../$src"
  done
}

build() {
  cd $_gitname
  arch-meson . build -D openrc=disabled -D libbpf_a=disabled -D bpftool=disabled
  meson compile -C build
}

package() {
  cd $_gitname
  meson install -C build --destdir "${pkgdir}"
}
