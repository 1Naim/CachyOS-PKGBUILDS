diff --git a/llama/Makefile b/llama/Makefile
index 47a87a75..150b6dbe 100644
--- a/llama/Makefile
+++ b/llama/Makefile
@@ -13,7 +13,7 @@ ifeq ($(OS),windows)
 else ifeq ($(OS),linux)
 	HIP_PATH?=/opt/rocm
 	HIP_LIB_DIR := $(shell ls -d $(HIP_PATH)/lib 2>/dev/null)
-	CUDA_PATH?=/usr/local/cuda
+	CUDA_PATH?=/opt/cuda
 	CUDA_11:=$(shell ls -d $(CUDA_PATH)-11 2>/dev/null)
 	CUDA_12:=$(shell ls -d $(CUDA_PATH)-12 2>/dev/null)
 endif
@@ -22,10 +22,8 @@ ifeq ($(OLLAMA_SKIP_CUDA_GENERATE),)
 ifneq ($(CUDA_11),)
 	RUNNER_TARGETS += cuda_v11
 endif
-ifneq ($(CUDA_12),)
 	RUNNER_TARGETS += cuda_v12
 endif
-endif
 ifeq ($(OLLAMA_SKIP_ROCM_GENERATE),)
 ifneq ($(HIP_LIB_DIR),)
 	RUNNER_TARGETS += rocm
diff --git a/llama/llama.go b/llama/llama.go
index 468540f5..40bcddd1 100644
--- a/llama/llama.go
+++ b/llama/llama.go
@@ -24,7 +24,7 @@ package llama
 #cgo cuda_jetpack5 LDFLAGS: -lggml_cuda_jetpack5 -L/usr/local/cuda-11/lib64
 #cgo cuda_jetpack6 LDFLAGS: -lggml_cuda_jetpack6 -L/usr/local/cuda-12/lib64
 #cgo cuda_v11 LDFLAGS: -lggml_cuda_v11 -L/usr/local/cuda-11/lib64
-#cgo cuda_v12 LDFLAGS: -lggml_cuda_v12 -L/usr/local/cuda-12/lib64
+#cgo cuda_v12 LDFLAGS: -lggml_cuda_v12 -L/usr/local/cuda-12/lib64 -L/opt/cuda/targets/x86_64-linux/lib/stubs
 #cgo darwin,amd64 CFLAGS: -Wno-incompatible-pointer-types-discards-qualifiers
 #cgo darwin,amd64 CXXFLAGS: -Wno-incompatible-pointer-types-discards-qualifiers
 #cgo darwin,amd64 LDFLAGS: -framework Foundation
@@ -43,7 +43,7 @@ package llama
 #cgo linux,arm64 LDFLAGS: -L${SRCDIR}/build/Linux/arm64
 #cgo linux,arm64,sve CFLAGS: -march=armv8.6-a+sve
 #cgo linux,arm64,sve CXXFLAGS: -march=armv8.6-a+sve
-#cgo linux,cuda LDFLAGS: -lcuda -lcudart -lcublas -lcublasLt -lpthread -ldl -lrt -lresolv
+#cgo linux,cuda LDFLAGS: -lcuda -lcudart -lcublas -lcublasLt -lpthread -ldl -lrt -lresolv -L/opt/cuda/targets/x86_64-linux/lib
 #cgo linux,rocm LDFLAGS: -L/opt/rocm/lib -lpthread -ldl -lrt -lresolv
 #cgo rocm CFLAGS: -DGGML_USE_CUDA -DGGML_USE_HIPBLAS -DGGML_CUDA_DMMV_X=32 -DGGML_CUDA_PEER_MAX_BATCH_SIZE=128 -DGGML_CUDA_MMV_Y=1 -DGGML_BUILD=1
 #cgo rocm CXXFLAGS: -DGGML_USE_CUDA -DGGML_USE_HIPBLAS -DGGML_CUDA_DMMV_X=32 -DGGML_CUDA_PEER_MAX_BATCH_SIZE=128 -DGGML_CUDA_MMV_Y=1 -DGGML_BUILD=1
diff --git a/llama/make/Makefile.cuda_v12 b/llama/make/Makefile.cuda_v12
index 2418ef00..fc84d9dc 100644
--- a/llama/make/Makefile.cuda_v12
+++ b/llama/make/Makefile.cuda_v12
@@ -5,8 +5,8 @@ include make/common-defs.make
 
 GPU_RUNNER_VARIANT := _v12
 GPU_PATH_ROOT_WIN=$(shell ls -d $(dir $(shell cygpath -m -s "$(CUDA_PATH)\.."))/v12.? 2>/dev/null)
-GPU_PATH_ROOT_LINUX=$(shell ls -d $(CUDA_PATH)-12 2>/dev/null)
+GPU_PATH_ROOT_LINUX=$(shell ls -d $(CUDA_PATH) 2>/dev/null)
 CUDA_ARCHITECTURES?=60;61;62;70;72;75;80;86;87;89;90;90a
 
 include make/cuda.make
-include make/gpu.make
\ No newline at end of file
+include make/gpu.make
diff --git a/llama/make/cuda.make b/llama/make/cuda.make
index 7a4b1036..71e58234 100644
--- a/llama/make/cuda.make
+++ b/llama/make/cuda.make
@@ -11,14 +11,14 @@ GPU_RUNNER_GO_TAGS := cuda cuda$(GPU_RUNNER_VARIANT)
 GPU_RUNNER_DRIVER_LIB_LINK := -lcuda
 GPU_RUNNER_LIBS_SHORT := cublas cudart cublasLt
 GPU_LIB_DIR_WIN = $(GPU_PATH_ROOT_WIN)/bin
-GPU_LIB_DIR_LINUX = $(GPU_PATH_ROOT_LINUX)/lib64
+GPU_LIB_DIR_LINUX = $(GPU_PATH_ROOT_LINUX)/targets/x86_64-linux/lib/stubs
 CGO_EXTRA_LDFLAGS_WIN = -L"$(GPU_PATH_ROOT_WIN)/lib/x64"
 GPU_COMPILER_WIN = $(GPU_PATH_ROOT_WIN)/bin/nvcc
 GPU_COMPILER_LINUX = $(GPU_PATH_ROOT_LINUX)/bin/nvcc
 GPU_COMPILER_CFLAGS_WIN = $(CFLAGS) -D_WIN32_WINNT=0x602
-GPU_COMPILER_CFLAGS_LINUX = $(CFLAGS) -Xcompiler -fPIC -D_GNU_SOURCE
+GPU_COMPILER_CFLAGS_LINUX = -Xcompiler -fPIC -D_GNU_SOURCE
 GPU_COMPILER_CXXFLAGS_WIN = $(CXXFLAGS) -D_WIN32_WINNT=0x602
-GPU_COMPILER_CXXFLAGS_LINUX = $(CXXFLAGS) -Xcompiler -fPIC -D_GNU_SOURCE
+GPU_COMPILER_CXXFLAGS_LINUX = -Xcompiler -fPIC -D_GNU_SOURCE
 GPU_LIBS = $(sort $(wildcard $(addsuffix *.$(SHARED_EXT)*,$(addprefix $(GPU_LIB_DIR)/$(SHARED_PREFIX),$(GPU_RUNNER_LIBS_SHORT)))))
 GPU_DIST_DEPS_LIBS= $(sort $(addprefix $(DIST_GPU_RUNNER_DEPS_DIR)/,$(notdir $(GPU_LIBS))))
 
